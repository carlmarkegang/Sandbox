#pragma checksum "C:\InfoSolutions\CsharpSandbox\Sandbox\Sandbox\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f954e4e2103dcce8dcd71d20c41c7a1a0cfd784e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Sandbox.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Index.cshtml", typeof(Sandbox.Pages.Pages_Index), null)]
namespace Sandbox.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\InfoSolutions\CsharpSandbox\Sandbox\Sandbox\Pages\_ViewImports.cshtml"
using Sandbox;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f954e4e2103dcce8dcd71d20c41c7a1a0cfd784e", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c03980a9280e2f476a3317f29ba2214f559033df", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\InfoSolutions\CsharpSandbox\Sandbox\Sandbox\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
            BeginContext(71, 3411, true);
            WriteLiteral(@"
<div class=""text-center"">
    <div id=""Unsorted"">
        <div>6</div>
        <div>1</div>
        <div>9</div>
        <div>2</div>
        <div>7</div>
        <div>3</div>
        <div>4</div>
        <div>5</div>
        <div>8</div>
        <div>77</div>
        <div>55</div>
        <div>454645345346545654466545456</div>
        <div>4565465465465465465464546546546545</div>
        <div>45464534534654565756789654466545456</div>
        <div>454645345346545678978978978978978954466545456</div>
        <div>4546453453465457897897806756654466545456</div>
        <div>46</div>
        <div>61</div>
        <div>546</div>
        <div>456</div>
        <div>5467547</div>
        <div>546</div>
        <div>566</div>
        <div>454645345346545654466545456</div>
        <div>7567</div>
        <div>123</div>
        <div>55445654665446</div>
        <div>4546453453465466545456</div>
        <div>5456454654453567547</div>
        <div>46566</div>
        <div>6546541</div>
 ");
            WriteLiteral(@"       <div>55465446</div>
        <div>45465456</div>
        <div>5456467547</div>
        <div>56546</div>
        <div>55666</div>
        <div>7546567</div>
        <div>1213</div>
    </div>
    <br /><br />
    <div id=""sorted""></div>


    <script>
        window.onload = function () {
            var x = 0;
            var speed = 50;
            var loopCount = document.getElementById(""Unsorted"").children.length;
            slowLooperOuter();
            function slowLooperOuter() {
                var sort = document.getElementById(""Unsorted"").children;
                var i = 0;
                var ElementToMove;
                var smallestValue;

                function slowLooper() {
                    var CurrentValue = parseInt(sort[i].innerHTML);
                    updateColor(sort[i]);

                    if (smallestValue > CurrentValue || smallestValue == undefined) {
                        if (ElementToMove) {
                            updateColor(El");
            WriteLiteral(@"ementToMove);
                        }
                        ElementToMove = sort[i];
                        smallestValue = sort[i].innerHTML;
                        sort[i].style.backgroundColor = ""lightgoldenrodyellow"";
                    }

                    if (i++ <= sort.length) {
                        setTimeout(slowLooper, speed);
                    }

                    if (i == sort.length) {
                        moveElementToSortedList(ElementToMove);
                    }
                }

                if (x++ < loopCount) {
                    setTimeout(slowLooperOuter, document.getElementById(""Unsorted"").children.length * speed);
                    slowLooper();
                }
                
            }

            

            function moveElementToSortedList(ElementToMove) {
                ElementToMove.style.backgroundColor = ""transparent"";
                document.getElementById(""sorted"").append(ElementToMove);

            }

  ");
            WriteLiteral(@"          function updateColor(element) {
                if (element.style.backgroundColor == ""lightblue"") {
                    element.style.backgroundColor = ""lightcoral""
                } else {
                    element.style.backgroundColor = ""lightblue""
                }
            }
        }

    </script>
</div>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
